
classdef ReswarmStatusPrimary < ros.Message
    %ReswarmStatusPrimary MATLAB implementation of reswarm_msgs/ReswarmStatusPrimary
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'reswarm_msgs/ReswarmStatusPrimary' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '9276f61c14b13d5399601a4a9f59f5d6' % The MD5 Checksum of the message definition
        PropertyList = { 'Stamp' 'TestNumber' 'DefaultControl' 'FlightMode' 'TestFinished' 'CoordOk' 'ControlMode' 'RegulateFinished' 'UcBoundActivated' 'UcBoundFinished' 'MrpiFinished' 'TrajSent' 'TrajFinished' 'GainMode' 'LqrrrtActivated' 'LqrrrtFinished' 'InfoTrajSend' 'SolverStatus' 'CostValue' 'KktValue' 'SolTime' } % List of non-constant message properties
        ROSPropertyList = { 'stamp' 'test_number' 'default_control' 'flight_mode' 'test_finished' 'coord_ok' 'control_mode' 'regulate_finished' 'uc_bound_activated' 'uc_bound_finished' 'mrpi_finished' 'traj_sent' 'traj_finished' 'gain_mode' 'lqrrrt_activated' 'lqrrrt_finished' 'info_traj_send' 'solver_status' 'cost_value' 'kkt_value' 'sol_time' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msg.Time' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Stamp
        TestNumber
        DefaultControl
        FlightMode
        TestFinished
        CoordOk
        ControlMode
        RegulateFinished
        UcBoundActivated
        UcBoundFinished
        MrpiFinished
        TrajSent
        TrajFinished
        GainMode
        LqrrrtActivated
        LqrrrtFinished
        InfoTrajSend
        SolverStatus
        CostValue
        KktValue
        SolTime
    end
    methods
        function set.Stamp(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.Time'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'Stamp')
            obj.Stamp = val;
        end
        function set.TestNumber(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'TestNumber');
            obj.TestNumber = int32(val);
        end
        function set.DefaultControl(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'DefaultControl');
            obj.DefaultControl = logical(val);
        end
        function set.FlightMode(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'FlightMode');
            obj.FlightMode = char(val);
        end
        function set.TestFinished(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'TestFinished');
            obj.TestFinished = logical(val);
        end
        function set.CoordOk(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'CoordOk');
            obj.CoordOk = logical(val);
        end
        function set.ControlMode(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'ControlMode');
            obj.ControlMode = char(val);
        end
        function set.RegulateFinished(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'RegulateFinished');
            obj.RegulateFinished = logical(val);
        end
        function set.UcBoundActivated(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'UcBoundActivated');
            obj.UcBoundActivated = logical(val);
        end
        function set.UcBoundFinished(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'UcBoundFinished');
            obj.UcBoundFinished = logical(val);
        end
        function set.MrpiFinished(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'MrpiFinished');
            obj.MrpiFinished = logical(val);
        end
        function set.TrajSent(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'TrajSent');
            obj.TrajSent = logical(val);
        end
        function set.TrajFinished(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'TrajFinished');
            obj.TrajFinished = logical(val);
        end
        function set.GainMode(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'GainMode');
            obj.GainMode = int32(val);
        end
        function set.LqrrrtActivated(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'LqrrrtActivated');
            obj.LqrrrtActivated = logical(val);
        end
        function set.LqrrrtFinished(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'LqrrrtFinished');
            obj.LqrrrtFinished = logical(val);
        end
        function set.InfoTrajSend(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'InfoTrajSend');
            obj.InfoTrajSend = logical(val);
        end
        function set.SolverStatus(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'SolverStatus');
            obj.SolverStatus = int32(val);
        end
        function set.CostValue(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'CostValue');
            obj.CostValue = single(val);
        end
        function set.KktValue(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'KktValue');
            obj.KktValue = single(val);
        end
        function set.SolTime(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ReswarmStatusPrimary', 'SolTime');
            obj.SolTime = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.reswarm_msgs.ReswarmStatusPrimary.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.reswarm_msgs.ReswarmStatusPrimary(strObj);
        end
    end
end
